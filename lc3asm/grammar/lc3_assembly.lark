start: (_SPACE* command _SPACE*)+ ".END"i _WS*

command: label _NL*
        |instruction _NL+
        |pseudo_op _NL+

label.3: LABEL_NAME _SPACE* ":" _SPACE*

instruction.3: INSTRUCTION_NAME _SPACE* (_SPACE arguments)?

pseudo_op.3: PSEUDO_OP_NAME _SPACE* (_SPACE arguments)?

arguments: argument
            | argument (_SPACE* "," _SPACE* argument _SPACE*)+

argument: REGISTER_NAME -> register_name
        | number
        | LABEL_NAME -> label
        | STRING_LITERAL -> string

number: DEC_NUMBER
    | HEX_NUMBER
    | BIN_NUMBER


LABEL_NAME: "."? WORD
INSTRUCTION_NAME: "BRZNP"i|"BRNZ"i|"BRNP"i|"BRZP"i|"BRN"i|"BRZ"i|"BRP"i|"BR"i|"ADD"i|"LD"i|"ST"i|"JSR"i|"AND"i|"LDR"i|"STR"i|"RTI"i|"NOT"i|"LDI"i|"STI"i|"JMP"i|"RES"i|"LEA"i|"TRAP"i|"GETC"i|"OUT"i|"PUTS"i|"IN"i|"PUTSP"i|"HALT"i
REGISTER_NAME: "R0"i|"R1"i|"R2"i|"R3"i|"R4"i|"R5"i|"R6"i|"R7"i|"PC"i|"COND"i
PSEUDO_OP_NAME: ".ORIG"i|".FILL"i|".BLKW"i|".STRINGZ"i

HEX_NUMBER: "0x" HEXDIGIT+
BIN_NUMBER: "0b" ("0"|"1")+

STRING_LITERAL: "\"" /[^\n]*/ "\""

COMMENT: ";" /[^\n]*/ _NL
_SPACE: " "|"\t"
_WS: _SPACE | _NL

%import common.INT -> DEC_NUMBER
%import common.HEXDIGIT
%import common.NEWLINE -> _NL
%import common.WORD
%ignore COMMENT
